{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     parameter1 as boolean (true()),",
				"     parameter2 as string ('param_2')",
				"}",
				"source(output(",
				"          EmployeeNumber as string,",
				"          Gender as string,",
				"          Education as string,",
				"          EducationField as string,",
				"          Department as string,",
				"          JobRole as string,",
				"          JobLevel as string,",
				"          PerformanceRating as string,",
				"          JobInvolvement as string,",
				"          JobSatisfaction as string,",
				"          RelationshipSatisfaction as string,",
				"          EnvironmentSatisfaction as string,",
				"          BusinessTravel as string,",
				"          OverTime as string,",
				"          WorkLifeBalance as string,",
				"          MaritalStatus as string,",
				"          StockOptionLevel as string,",
				"          Age as string,",
				"          DistanceFromHome as string,",
				"          MonthlyIncome as string,",
				"          DailyRate as string,",
				"          HourlyRate as string,",
				"          MonthlyRate as string,",
				"          NumCompaniesWorked as string,",
				"          PercentSalaryHike as string,",
				"          TotalWorkingYears as string,",
				"          TrainingTimesLastYear as string,",
				"          YearsAtCompany as string,",
				"          YearsInCurrentRole as string,",
				"          YearsSinceLastPromotion as string,",
				"          YearsWithCurrManager as string,",
				"          Attrition as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> source1",
				"source1 filter(ERROR_FUNCTION('')) ~> filter1",
				"filter1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}